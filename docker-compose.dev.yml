version: '3.8'

services:
  # PostgreSQL with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: amazon-analytics-postgres-dev
    environment:
      POSTGRES_DB: amazon_analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      TIMESCALEDB_TELEMETRY: off
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - amazon-analytics-dev

  # Redis
  redis:
    image: redis:7-alpine
    container_name: amazon-analytics-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - amazon-analytics-dev

  # Backend API (development mode with hot reload)
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: amazon-analytics-backend-dev
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=amazon_analytics
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-secret-key
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - amazon-analytics-dev
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  amazon-analytics-dev:
    driver: bridge